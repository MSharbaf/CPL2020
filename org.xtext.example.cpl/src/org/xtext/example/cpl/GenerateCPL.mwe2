module org.xtext.example.cpl.GenerateCPL

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import de.itemis.xtext.antlr.*
import org.antlr.generator.*

var rootPath = ".."

Workflow {
	
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "org.xtext.example.cpl"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "windows-1252"
				lineDelimiter = "\r\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "org.xtext.example.cpl.CPL"
			fileExtensions = "cpl"

			referencedResource = "platform:/resource/org.eclipse.ocl.xtext.base/model/BaseCS.genmodel"
			referencedResource = "platform:/resource/org.eclipse.ocl.pivot/model/Pivot.genmodel"
			referencedResource = "platform:/resource/org.eclipse.ocl.xtext.essentialocl/model/EssentialOCLCS.genmodel"

			parserGenerator = {
			 	options = {
  				  backtrack = true
  				  classSplitting = true
  				}
  	//			antlrParam = "-Xconversiontimeout" antlrParam = "10000"
			}


			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
		}
	}
}
