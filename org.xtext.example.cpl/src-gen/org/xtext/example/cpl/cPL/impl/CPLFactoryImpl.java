/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.cpl.cPL.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.cpl.cPL.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class CPLFactoryImpl extends EFactoryImpl implements CPLFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static CPLFactory init()
  {
    try
    {
      CPLFactory theCPLFactory = (CPLFactory)EPackage.Registry.INSTANCE.getEFactory(CPLPackage.eNS_URI);
      if (theCPLFactory != null)
      {
        return theCPLFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new CPLFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CPLFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case CPLPackage.TOP_LEVEL_CP: return createTopLevelCP();
      case CPLPackage.RELATION_CP: return createRelationCP();
      case CPLPackage.DESCRIPTION_CP: return createDescriptionCP();
      case CPLPackage.CONDITION_CS: return createConditionCS();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TopLevelCP createTopLevelCP()
  {
    TopLevelCPImpl topLevelCP = new TopLevelCPImpl();
    return topLevelCP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RelationCP createRelationCP()
  {
    RelationCPImpl relationCP = new RelationCPImpl();
    return relationCP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DescriptionCP createDescriptionCP()
  {
    DescriptionCPImpl descriptionCP = new DescriptionCPImpl();
    return descriptionCP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConditionCS createConditionCS()
  {
    ConditionCSImpl conditionCS = new ConditionCSImpl();
    return conditionCS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CPLPackage getCPLPackage()
  {
    return (CPLPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static CPLPackage getPackage()
  {
    return CPLPackage.eINSTANCE;
  }

} //CPLFactoryImpl
