/*
 * generated by Xtext 2.14.0
 */
package org.xtext.example.cpl.formatting2

import com.google.inject.Inject
import org.eclipse.ocl.xtext.basecs.ImportCS
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.cpl.cPL.TopLevelCP
import org.xtext.example.cpl.services.CPLGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2

class CPLFormatter extends AbstractFormatter2 {
	
	@Inject extension CPLGrammarAccess

	def dispatch void format(TopLevelCP topLevelCP, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (importCS : topLevelCP.ownedImports) {
			importCS.format
		}
		for (contextDeclCS : topLevelCP.ownedContexts) {
			contextDeclCS.format
		}
//		for (relationCP : topLevelCP.ownedContexts) {
//			relationCP.format
//		}
//		for (messageCP : topLevelCP.ownedContexts) {
//			messageCP.format
//		}
		
		for (relationCP : topLevelCP.ownedRelation) {
			relationCP.format
		}
		for (messageCP : topLevelCP.ownedMessage) {
			messageCP.format
		}
	}

	def dispatch void format(ImportCS importCS, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		importCS.ownedPathName.format
	}
	
	// TODO: implement for RelationCP, ConditionCS, ClassifierContextDeclCS, ConstraintCS, PropertyContextDeclCS, OperationContextDeclCS, ParameterCS, ExpSpecificationCS, DefOperationCS, DefPropertyCS
}
