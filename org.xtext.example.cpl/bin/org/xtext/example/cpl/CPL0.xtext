grammar org.xtext.example.cpl.CPL 
		with org.eclipse.ocl.xtext.completeocl.CompleteOCL 
import "http://www.eclipse.org/ocl/2015/BaseCS" as base
import "http://www.eclipse.org/ocl/2015/EssentialOCLCS" as eOCL
import "http://www.eclipse.org/ocl/2015/CompleteOCLCS" as cOCL
generate cPL "http://www.xtext.org/example/cpl/CPL"

TopLevelCP:
	'conflict' name=Identifier '{'
		(ownedDomains+=DomainCP)+
		(ownedFragment+=DeclarationCP)+
		(ownedRelation+=StatementCP)?
		(ownedMessage+=MessageCP)? 
	'}' ;

DomainCP returns base::ImportCS:
	('import' | 'domain') (name=Identifier ':')? 
		ownedPathName=URIPathNameCS (isAll?='::*')? ;
		
DeclarationCP:
	'inmodel' name=Identifier '{'
		ownedContexts+=ContextDeclCS*
	'}' ;

StatementCP:
	'where' '{'  
		(('or'|'and')? ownedConditions+=ConditionCS)+
	'}' ;

MessageCP:
	'message' '{' ownedExpression=STRING '}' ;


@Override 
ContextDeclCS returns cOCL::ContextDeclCS:
	PropertyContextDeclCS
	| ClassifierContextDeclCS
	| OperationContextDeclCS;


ConditionCS:
	(ownedElementA=[DeclarationCP|FQN])? 
	('isEquivalent'|'isContradict'|'>'|'<'|'=='|'<>'|'!'|'>='|'=<'|'IN'|'NotIN')? 
	(ownedElementB=[DeclarationCP|FQN]) 
;

FQN:
	ID ("." ID)*
;

terminal STRING: 
    '"' ( '\\'('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"'
;

@Override 
ClassifierContextDeclCS returns cOCL::ClassifierContextDeclCS:
	'context' (ownedSignature=TemplateSignatureCS)? (selfName=UnrestrictedName)?
	ownedPathName=PathNameCS	
	('inv' ownedInvariants+=ConstraintCS)+;
	
@Override 
ConstraintCS returns base::ConstraintCS:
	(name=UnrestrictedName ('(' ownedMessageSpecification=SpecificationCS ')')?)? ':' ownedSpecification=SpecificationCS;

@Override 
PropertyContextDeclCS returns cOCL::PropertyContextDeclCS:
	'context' ownedPathName=PathNameCS ':' ownedType=TypeExpCS
	(('derive' UnrestrictedName? ':' ownedDefaultExpressions+=SpecificationCS)
	| ('init' UnrestrictedName? ':' ownedDefaultExpressions+=SpecificationCS)
	)*;

@Override 
OperationContextDeclCS returns cOCL::OperationContextDeclCS:
	'context' (ownedSignature=TemplateSignatureCS)? ownedPathName=PathNameCS
	'(' (ownedParameters+=ParameterCS (',' ownedParameters+=ParameterCS)*)? ')' ':' (ownedType=TypeExpCS)?
	(('pre' ownedPreconditions+=ConstraintCS)
	| ('post' ownedPostconditions+=ConstraintCS)
	| ('body' UnrestrictedName? ':' ownedBodies+=SpecificationCS)
	)*;

@Override 
ParameterCS returns base::ParameterCS:
	(name=UnrestrictedName ':')? ownedType=TypeExpCS;

@Override 
DefCS returns cOCL::DefCS:
	DefOperationCS|DefPropertyCS;
	
@Override 
SpecificationCS returns eOCL::ExpSpecificationCS:
	ownedExpression=ExpCS | exprString=UNQUOTED_STRING;
	
@Override 
DefOperationCS returns cOCL::DefOperationCS:
	(isStatic?='static')? 'def' UnrestrictedName? ':' (ownedSignature=TemplateSignatureCS)?
		name=UnrestrictedName '(' (ownedParameters+=DefParameterCS (',' ownedParameters+=DefParameterCS)*)? ')' ':' (ownedType=TypeExpCS)?
		 '=' ownedSpecification=SpecificationCS;
		 
@Override 
DefPropertyCS returns cOCL::DefPropertyCS:
	(isStatic?='static')? 'def' UnrestrictedName? ':' name=UnrestrictedName ':' ownedType=TypeExpCS
		'=' ownedSpecification=SpecificationCS;
	
@Override 
DefParameterCS returns base::ParameterCS:
	name=UnrestrictedName ':' ownedType=TypeExpCS;
	